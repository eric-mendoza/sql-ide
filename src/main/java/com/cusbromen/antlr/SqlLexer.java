// Generated from /home/emendoza/IdeaProjects/sql-ide/src/main/java/Sql.g4 by ANTLR 4.7
package com.cusbromen.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SqlLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, NOT=50, OR=51, AND=52, NUMBER=53, 
		INT=54, FLOAT=55, ID=56, NEWLINE=57, WHITESPACE=58, COMMENTS=59, ErrorCharacter=60;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"NOT", "OR", "AND", "DIGIT", "NUMBER", "INT", "FLOAT", "ID", "NEWLINE", 
		"WHITESPACE", "COMMENTS", "ErrorCharacter"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'CREATE'", "'DATABASE'", "';'", "'ALTER'", "'RENAME'", "'TO'", 
		"'DROP'", "'SHOW'", "'DATABASES'", "'USE'", "'TABLE'", "'TABLES'", "'COLUMNS'", 
		"'FROM'", "'INSERT'", "'INTO'", "','", "'VALUES'", "'UPDATE'", "'SET'", 
		"'='", "'WHERE'", "'DELETE'", "'SELECT'", "'*'", "'ORDER'", "'BY'", "'ASC'", 
		"'DESC'", "'ADD'", "'COLUMN'", "'CONSTRAINT'", "'('", "')'", "'INT'", 
		"'FLOAT'", "'DATE'", "'CHAR'", "'NULL'", "'PRIMARY'", "'KEY'", "'FOREIGN'", 
		"'CHECK'", "'REFERENCES'", "'<'", "'<='", "'>'", "'>='", "'<>'", "'NOT'", 
		"'OR'", "'AND'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "NOT", "OR", "AND", "NUMBER", "INT", "FLOAT", "ID", "NEWLINE", 
		"WHITESPACE", "COMMENTS", "ErrorCharacter"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SqlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Sql.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2>\u01c4\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3"+
		"\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n"+
		"\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17"+
		"\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21"+
		"\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24"+
		"\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3"+
		" \3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3$\3$\3%\3%\3%"+
		"\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3"+
		")\3)\3)\3)\3)\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3"+
		"-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61\3\61"+
		"\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\65"+
		"\3\66\3\66\3\67\3\67\7\67\u0190\n\67\f\67\16\67\u0193\13\67\38\58\u0196"+
		"\n8\38\38\39\39\59\u019c\n9\39\59\u019f\n9\3:\3:\7:\u01a3\n:\f:\16:\u01a6"+
		"\13:\6:\u01a8\n:\r:\16:\u01a9\3;\5;\u01ad\n;\3;\3;\3<\6<\u01b2\n<\r<\16"+
		"<\u01b3\3<\3<\3=\3=\3=\3=\7=\u01bc\n=\f=\16=\u01bf\13=\3=\3=\3>\3>\2\2"+
		"?\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20"+
		"\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37"+
		"= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\2m\67"+
		"o8q9s:u;w<y={>\3\2\5\5\2C\\aac|\5\2\13\f\16\17\"\"\4\2\f\f\17\17\2\u01cb"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2m\3\2\2\2\2o\3\2\2"+
		"\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\3"+
		"}\3\2\2\2\5\u0084\3\2\2\2\7\u008d\3\2\2\2\t\u008f\3\2\2\2\13\u0095\3\2"+
		"\2\2\r\u009c\3\2\2\2\17\u009f\3\2\2\2\21\u00a4\3\2\2\2\23\u00a9\3\2\2"+
		"\2\25\u00b3\3\2\2\2\27\u00b7\3\2\2\2\31\u00bd\3\2\2\2\33\u00c4\3\2\2\2"+
		"\35\u00cc\3\2\2\2\37\u00d1\3\2\2\2!\u00d8\3\2\2\2#\u00dd\3\2\2\2%\u00df"+
		"\3\2\2\2\'\u00e6\3\2\2\2)\u00ed\3\2\2\2+\u00f1\3\2\2\2-\u00f3\3\2\2\2"+
		"/\u00f9\3\2\2\2\61\u0100\3\2\2\2\63\u0107\3\2\2\2\65\u0109\3\2\2\2\67"+
		"\u010f\3\2\2\29\u0112\3\2\2\2;\u0116\3\2\2\2=\u011b\3\2\2\2?\u011f\3\2"+
		"\2\2A\u0126\3\2\2\2C\u0131\3\2\2\2E\u0133\3\2\2\2G\u0135\3\2\2\2I\u0139"+
		"\3\2\2\2K\u013f\3\2\2\2M\u0144\3\2\2\2O\u0149\3\2\2\2Q\u014e\3\2\2\2S"+
		"\u0156\3\2\2\2U\u015a\3\2\2\2W\u0162\3\2\2\2Y\u0168\3\2\2\2[\u0173\3\2"+
		"\2\2]\u0175\3\2\2\2_\u0178\3\2\2\2a\u017a\3\2\2\2c\u017d\3\2\2\2e\u0180"+
		"\3\2\2\2g\u0184\3\2\2\2i\u0187\3\2\2\2k\u018b\3\2\2\2m\u018d\3\2\2\2o"+
		"\u0195\3\2\2\2q\u0199\3\2\2\2s\u01a7\3\2\2\2u\u01ac\3\2\2\2w\u01b1\3\2"+
		"\2\2y\u01b7\3\2\2\2{\u01c2\3\2\2\2}~\7E\2\2~\177\7T\2\2\177\u0080\7G\2"+
		"\2\u0080\u0081\7C\2\2\u0081\u0082\7V\2\2\u0082\u0083\7G\2\2\u0083\4\3"+
		"\2\2\2\u0084\u0085\7F\2\2\u0085\u0086\7C\2\2\u0086\u0087\7V\2\2\u0087"+
		"\u0088\7C\2\2\u0088\u0089\7D\2\2\u0089\u008a\7C\2\2\u008a\u008b\7U\2\2"+
		"\u008b\u008c\7G\2\2\u008c\6\3\2\2\2\u008d\u008e\7=\2\2\u008e\b\3\2\2\2"+
		"\u008f\u0090\7C\2\2\u0090\u0091\7N\2\2\u0091\u0092\7V\2\2\u0092\u0093"+
		"\7G\2\2\u0093\u0094\7T\2\2\u0094\n\3\2\2\2\u0095\u0096\7T\2\2\u0096\u0097"+
		"\7G\2\2\u0097\u0098\7P\2\2\u0098\u0099\7C\2\2\u0099\u009a\7O\2\2\u009a"+
		"\u009b\7G\2\2\u009b\f\3\2\2\2\u009c\u009d\7V\2\2\u009d\u009e\7Q\2\2\u009e"+
		"\16\3\2\2\2\u009f\u00a0\7F\2\2\u00a0\u00a1\7T\2\2\u00a1\u00a2\7Q\2\2\u00a2"+
		"\u00a3\7R\2\2\u00a3\20\3\2\2\2\u00a4\u00a5\7U\2\2\u00a5\u00a6\7J\2\2\u00a6"+
		"\u00a7\7Q\2\2\u00a7\u00a8\7Y\2\2\u00a8\22\3\2\2\2\u00a9\u00aa\7F\2\2\u00aa"+
		"\u00ab\7C\2\2\u00ab\u00ac\7V\2\2\u00ac\u00ad\7C\2\2\u00ad\u00ae\7D\2\2"+
		"\u00ae\u00af\7C\2\2\u00af\u00b0\7U\2\2\u00b0\u00b1\7G\2\2\u00b1\u00b2"+
		"\7U\2\2\u00b2\24\3\2\2\2\u00b3\u00b4\7W\2\2\u00b4\u00b5\7U\2\2\u00b5\u00b6"+
		"\7G\2\2\u00b6\26\3\2\2\2\u00b7\u00b8\7V\2\2\u00b8\u00b9\7C\2\2\u00b9\u00ba"+
		"\7D\2\2\u00ba\u00bb\7N\2\2\u00bb\u00bc\7G\2\2\u00bc\30\3\2\2\2\u00bd\u00be"+
		"\7V\2\2\u00be\u00bf\7C\2\2\u00bf\u00c0\7D\2\2\u00c0\u00c1\7N\2\2\u00c1"+
		"\u00c2\7G\2\2\u00c2\u00c3\7U\2\2\u00c3\32\3\2\2\2\u00c4\u00c5\7E\2\2\u00c5"+
		"\u00c6\7Q\2\2\u00c6\u00c7\7N\2\2\u00c7\u00c8\7W\2\2\u00c8\u00c9\7O\2\2"+
		"\u00c9\u00ca\7P\2\2\u00ca\u00cb\7U\2\2\u00cb\34\3\2\2\2\u00cc\u00cd\7"+
		"H\2\2\u00cd\u00ce\7T\2\2\u00ce\u00cf\7Q\2\2\u00cf\u00d0\7O\2\2\u00d0\36"+
		"\3\2\2\2\u00d1\u00d2\7K\2\2\u00d2\u00d3\7P\2\2\u00d3\u00d4\7U\2\2\u00d4"+
		"\u00d5\7G\2\2\u00d5\u00d6\7T\2\2\u00d6\u00d7\7V\2\2\u00d7 \3\2\2\2\u00d8"+
		"\u00d9\7K\2\2\u00d9\u00da\7P\2\2\u00da\u00db\7V\2\2\u00db\u00dc\7Q\2\2"+
		"\u00dc\"\3\2\2\2\u00dd\u00de\7.\2\2\u00de$\3\2\2\2\u00df\u00e0\7X\2\2"+
		"\u00e0\u00e1\7C\2\2\u00e1\u00e2\7N\2\2\u00e2\u00e3\7W\2\2\u00e3\u00e4"+
		"\7G\2\2\u00e4\u00e5\7U\2\2\u00e5&\3\2\2\2\u00e6\u00e7\7W\2\2\u00e7\u00e8"+
		"\7R\2\2\u00e8\u00e9\7F\2\2\u00e9\u00ea\7C\2\2\u00ea\u00eb\7V\2\2\u00eb"+
		"\u00ec\7G\2\2\u00ec(\3\2\2\2\u00ed\u00ee\7U\2\2\u00ee\u00ef\7G\2\2\u00ef"+
		"\u00f0\7V\2\2\u00f0*\3\2\2\2\u00f1\u00f2\7?\2\2\u00f2,\3\2\2\2\u00f3\u00f4"+
		"\7Y\2\2\u00f4\u00f5\7J\2\2\u00f5\u00f6\7G\2\2\u00f6\u00f7\7T\2\2\u00f7"+
		"\u00f8\7G\2\2\u00f8.\3\2\2\2\u00f9\u00fa\7F\2\2\u00fa\u00fb\7G\2\2\u00fb"+
		"\u00fc\7N\2\2\u00fc\u00fd\7G\2\2\u00fd\u00fe\7V\2\2\u00fe\u00ff\7G\2\2"+
		"\u00ff\60\3\2\2\2\u0100\u0101\7U\2\2\u0101\u0102\7G\2\2\u0102\u0103\7"+
		"N\2\2\u0103\u0104\7G\2\2\u0104\u0105\7E\2\2\u0105\u0106\7V\2\2\u0106\62"+
		"\3\2\2\2\u0107\u0108\7,\2\2\u0108\64\3\2\2\2\u0109\u010a\7Q\2\2\u010a"+
		"\u010b\7T\2\2\u010b\u010c\7F\2\2\u010c\u010d\7G\2\2\u010d\u010e\7T\2\2"+
		"\u010e\66\3\2\2\2\u010f\u0110\7D\2\2\u0110\u0111\7[\2\2\u01118\3\2\2\2"+
		"\u0112\u0113\7C\2\2\u0113\u0114\7U\2\2\u0114\u0115\7E\2\2\u0115:\3\2\2"+
		"\2\u0116\u0117\7F\2\2\u0117\u0118\7G\2\2\u0118\u0119\7U\2\2\u0119\u011a"+
		"\7E\2\2\u011a<\3\2\2\2\u011b\u011c\7C\2\2\u011c\u011d\7F\2\2\u011d\u011e"+
		"\7F\2\2\u011e>\3\2\2\2\u011f\u0120\7E\2\2\u0120\u0121\7Q\2\2\u0121\u0122"+
		"\7N\2\2\u0122\u0123\7W\2\2\u0123\u0124\7O\2\2\u0124\u0125\7P\2\2\u0125"+
		"@\3\2\2\2\u0126\u0127\7E\2\2\u0127\u0128\7Q\2\2\u0128\u0129\7P\2\2\u0129"+
		"\u012a\7U\2\2\u012a\u012b\7V\2\2\u012b\u012c\7T\2\2\u012c\u012d\7C\2\2"+
		"\u012d\u012e\7K\2\2\u012e\u012f\7P\2\2\u012f\u0130\7V\2\2\u0130B\3\2\2"+
		"\2\u0131\u0132\7*\2\2\u0132D\3\2\2\2\u0133\u0134\7+\2\2\u0134F\3\2\2\2"+
		"\u0135\u0136\7K\2\2\u0136\u0137\7P\2\2\u0137\u0138\7V\2\2\u0138H\3\2\2"+
		"\2\u0139\u013a\7H\2\2\u013a\u013b\7N\2\2\u013b\u013c\7Q\2\2\u013c\u013d"+
		"\7C\2\2\u013d\u013e\7V\2\2\u013eJ\3\2\2\2\u013f\u0140\7F\2\2\u0140\u0141"+
		"\7C\2\2\u0141\u0142\7V\2\2\u0142\u0143\7G\2\2\u0143L\3\2\2\2\u0144\u0145"+
		"\7E\2\2\u0145\u0146\7J\2\2\u0146\u0147\7C\2\2\u0147\u0148\7T\2\2\u0148"+
		"N\3\2\2\2\u0149\u014a\7P\2\2\u014a\u014b\7W\2\2\u014b\u014c\7N\2\2\u014c"+
		"\u014d\7N\2\2\u014dP\3\2\2\2\u014e\u014f\7R\2\2\u014f\u0150\7T\2\2\u0150"+
		"\u0151\7K\2\2\u0151\u0152\7O\2\2\u0152\u0153\7C\2\2\u0153\u0154\7T\2\2"+
		"\u0154\u0155\7[\2\2\u0155R\3\2\2\2\u0156\u0157\7M\2\2\u0157\u0158\7G\2"+
		"\2\u0158\u0159\7[\2\2\u0159T\3\2\2\2\u015a\u015b\7H\2\2\u015b\u015c\7"+
		"Q\2\2\u015c\u015d\7T\2\2\u015d\u015e\7G\2\2\u015e\u015f\7K\2\2\u015f\u0160"+
		"\7I\2\2\u0160\u0161\7P\2\2\u0161V\3\2\2\2\u0162\u0163\7E\2\2\u0163\u0164"+
		"\7J\2\2\u0164\u0165\7G\2\2\u0165\u0166\7E\2\2\u0166\u0167\7M\2\2\u0167"+
		"X\3\2\2\2\u0168\u0169\7T\2\2\u0169\u016a\7G\2\2\u016a\u016b\7H\2\2\u016b"+
		"\u016c\7G\2\2\u016c\u016d\7T\2\2\u016d\u016e\7G\2\2\u016e\u016f\7P\2\2"+
		"\u016f\u0170\7E\2\2\u0170\u0171\7G\2\2\u0171\u0172\7U\2\2\u0172Z\3\2\2"+
		"\2\u0173\u0174\7>\2\2\u0174\\\3\2\2\2\u0175\u0176\7>\2\2\u0176\u0177\7"+
		"?\2\2\u0177^\3\2\2\2\u0178\u0179\7@\2\2\u0179`\3\2\2\2\u017a\u017b\7@"+
		"\2\2\u017b\u017c\7?\2\2\u017cb\3\2\2\2\u017d\u017e\7>\2\2\u017e\u017f"+
		"\7@\2\2\u017fd\3\2\2\2\u0180\u0181\7P\2\2\u0181\u0182\7Q\2\2\u0182\u0183"+
		"\7V\2\2\u0183f\3\2\2\2\u0184\u0185\7Q\2\2\u0185\u0186\7T\2\2\u0186h\3"+
		"\2\2\2\u0187\u0188\7C\2\2\u0188\u0189\7P\2\2\u0189\u018a\7F\2\2\u018a"+
		"j\3\2\2\2\u018b\u018c\4\62;\2\u018cl\3\2\2\2\u018d\u0191\5k\66\2\u018e"+
		"\u0190\5k\66\2\u018f\u018e\3\2\2\2\u0190\u0193\3\2\2\2\u0191\u018f\3\2"+
		"\2\2\u0191\u0192\3\2\2\2\u0192n\3\2\2\2\u0193\u0191\3\2\2\2\u0194\u0196"+
		"\7/\2\2\u0195\u0194\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0197\3\2\2\2\u0197"+
		"\u0198\5m\67\2\u0198p\3\2\2\2\u0199\u019b\5o8\2\u019a\u019c\7\60\2\2\u019b"+
		"\u019a\3\2\2\2\u019b\u019c\3\2\2\2\u019c\u019e\3\2\2\2\u019d\u019f\5m"+
		"\67\2\u019e\u019d\3\2\2\2\u019e\u019f\3\2\2\2\u019fr\3\2\2\2\u01a0\u01a4"+
		"\t\2\2\2\u01a1\u01a3\5k\66\2\u01a2\u01a1\3\2\2\2\u01a3\u01a6\3\2\2\2\u01a4"+
		"\u01a2\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5\u01a8\3\2\2\2\u01a6\u01a4\3\2"+
		"\2\2\u01a7\u01a0\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\u01a7\3\2\2\2\u01a9"+
		"\u01aa\3\2\2\2\u01aat\3\2\2\2\u01ab\u01ad\7\17\2\2\u01ac\u01ab\3\2\2\2"+
		"\u01ac\u01ad\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01af\7\f\2\2\u01afv\3"+
		"\2\2\2\u01b0\u01b2\t\3\2\2\u01b1\u01b0\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3"+
		"\u01b1\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4\u01b5\3\2\2\2\u01b5\u01b6\b<"+
		"\2\2\u01b6x\3\2\2\2\u01b7\u01b8\7/\2\2\u01b8\u01b9\7/\2\2\u01b9\u01bd"+
		"\3\2\2\2\u01ba\u01bc\n\4\2\2\u01bb\u01ba\3\2\2\2\u01bc\u01bf\3\2\2\2\u01bd"+
		"\u01bb\3\2\2\2\u01bd\u01be\3\2\2\2\u01be\u01c0\3\2\2\2\u01bf\u01bd\3\2"+
		"\2\2\u01c0\u01c1\b=\2\2\u01c1z\3\2\2\2\u01c2\u01c3\13\2\2\2\u01c3|\3\2"+
		"\2\2\f\2\u0191\u0195\u019b\u019e\u01a4\u01a9\u01ac\u01b3\u01bd\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}